<html lang="en">
  <head>
    <title>Create Server - <%= extra.name %></title>
    <%- include('./components/sources') %>
    <style>
      .separator-line {
        border-top: 1px solid #ffffff;
        /* Specify the color, thickness, and style of the line */
      }
    </style>
  </head>

  <body class="g-sidenav-show bg-black-100 dark-version">
    <% let ram=0; let disk=0; let cpu=0; let
    servers=pterodactyl.relationships.servers.data.length; for (let i=0,
    len=pterodactyl.relationships.servers.data.length; i < len; i++) { ram=ram +
    (typeof
    pterodactyl.relationships.servers.data[i].attributes.limits.memory=="number"
    ? pterodactyl.relationships.servers.data[i].attributes.limits.memory : 0);
    disk=disk + (typeof
    pterodactyl.relationships.servers.data[i].attributes.limits.disk=="number" ?
    pterodactyl.relationships.servers.data[i].attributes.limits.disk : 0);
    cpu=cpu + (typeof
    pterodactyl.relationships.servers.data[i].attributes.limits.cpu=="number" ?
    pterodactyl.relationships.servers.data[i].attributes.limits.cpu : 0); } %>
    <div class="min-height-300 bs-dark position-absolute w-100"></div>
    <%- include('./elements/createServer/sidebar') %>
    <main class="main-content position-relative border-radius-lg ps">
      <!-- Navbar -->
      <%- include('./components/navbar') %>
      <!-- End Navbar -->
      <div class="container-fluid py-4">
        <%- include('./components/header') %> <%- include('./components/onload')
        %>
        <div class="container-fluid mt-4">
          <div class="row">
            <div class="col-12">
              <!-- Dark Chart -->
              <div class="card mb-4">
                <div class="card-header border-0">
                  <div class="row align-items-center">
                    <div class="col">
                      <h3 class="mb-0">Create New Server</h3>
                    </div>
                  </div>
                </div>
                <div class="card-body">
                  <form id="myForm">
                    <div class="row">
                      <div class="col-md-4 mt-5">
                        <div class="px-4 sm:px-0">
                          <h3 class="text-lg font-medium leading-6 text-white">
                            Basic Details
                          </h3>
                          <p class="mt-1 text-sm text-gray-400">
                            This information will be displayed in the server
                            management list on both the Panel and Dashboard.
                          </p>
                        </div>
                      </div>
                      <div class="col-md-8 mt-5">
                        <div class="shadow-sm p-4 rounded-md">
                          <div class="col">
                            <div class="col-md-12">
                              <div class="form-floating mb-3">
                                <input
                                  type="text"
                                  name="name"
                                  id="name"
                                  class="form-control bg-dark text-white rounded-md"
                                  placeholder="Server Name"
                                  required
                                />
                                <label for="name" class="text-sm text-gray-400"
                                  >Server Name</label
                                >
                              </div>
                            </div>
                          </div>

                          <div class="form-floating">
                            <textarea
                              id="description"
                              name="about"
                              rows="3"
                              class="form-control bg-dark text-white rounded-md"
                              placeholder="We couldn't figure out what a good placeholder description should be..."
                            ></textarea>
                            <label for="about" class="text-sm text-gray-400"
                              >Description (Optional)</label
                            >
                            <p class="mt-2 text-sm text-gray-500">
                              Brief description for your server. This can be
                              changed on the Panel.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="container mt-4">
                      <div class="row">
                        <div class="col-md-12">
                          <div class="separator-line mt-3"></div>
                        </div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-md-4 mt-5">
                        <div class="px-4 sm:px-0">
                          <h3 class="text-lg font-medium leading-6 text-white">
                            Resources
                          </h3>
                          <p class="mt-1 text-sm text-gray-400">
                            Decide how much of resources should be allocated to
                            this server.
                          </p>
                        </div>
                      </div>
                      <div class="col-md-8 mt-5">
                        <div class="shadow-sm p-4 rounded-md">
                          <div class="form-floating">
                            <div class="col">
                              <div class="col-md-12">
                                <div class="form-floating mb-3 form-group">
                                  <input
                                    type="text"
                                    name="name"
                                    id="ram"
                                    type="number"
                                    class="form-control bg-dark text-white rounded-md"
                                    value="<%= ((packages ? packages.ram : 0) + extraresources.ram + j4r.ram) - ram %>"
                                    oninput="this.value = this.value.replace(/[^0-9]/g, '');"
                                    required
                                  />
                                  <label
                                    for="name"
                                    class="text-sm text-gray-400"
                                    >RAM</label
                                  >
                                </div>
                              </div>
                            </div>

                            <div class="col">
                              <div class="col-md-12">
                                <div class="form-floating mb-3">
                                  <input
                                    type="text"
                                    name="name"
                                    id="disk"
                                    type="number"
                                    class="form-control bg-dark text-white rounded-md"
                                    value="<%= ((packages ? packages.disk : 0) + extraresources.ram + j4r.disk) - disk %>"
                                    oninput="this.value = this.value.replace(/[^0-9]/g, '');"
                                    required
                                  />
                                  <label
                                    for="name"
                                    class="text-sm text-gray-400"
                                    >DISK</label
                                  >
                                </div>
                              </div>
                            </div>
                            <div class="col">
                              <div class="col-md-12">
                                <div class="form-floating mb-3">
                                  <input
                                    type="text"
                                    name="name"
                                    id="cpu"
                                    type="number"
                                    class="form-control bg-dark text-white rounded-md"
                                    value="<%= ((packages ? packages.cpu : 0) + extraresources.cpu + j4r.cpu) - cpu %>"
                                    oninput="this.value = this.value.replace(/[^0-9]/g, '');"
                                    required
                                  />
                                  <label
                                    for="name"
                                    class="text-sm text-gray-400"
                                    >CPU</label
                                  >
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="container mt-4">
                      <div class="row">
                        <div class="col-md-12">
                          <div class="separator-line mt-3"></div>
                        </div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-md-4 mt-5">
                        <div class="px-4 sm:px-0">
                          <h3 class="text-lg font-medium leading-6 text-white">
                            Configuration
                          </h3>
                          <p class="mt-1 text-sm text-gray-400">
                            Choose the location and type for your server. This
                            cannot be changed.
                          </p>
                        </div>
                      </div>
                      <div class="col-md-8 mt-5">
                        <div class="shadow-sm p-4 rounded-md">
                          <div class="form-floating">
                            <div class="form-group">
                              <label for="location" class="form-label"
                                >Location</label
                              >
                              <select
                                class="form-control bg-default form-control-alternative"
                                id="location"
                              >
                                <% for (let [name, value] of
                                Object.entries(settings.api.client.locations)) {
                                %>
                                <option value="<%= name %>">
                                  <%= value.name %>
                                </option>
                                <% } %>
                              </select>
                            </div>
                            <div class="form-group">
                              <label for="egg" class="form-label">Type</label>
                              <select
                                class="form-control bg-default form-control-alternative"
                                id="type"
                              >
                                <% for (let [name, value] of
                                Object.entries(settings.api.client.eggs)) { %>
                                <option value="<%= name %>">
                                  <%= value.display %>
                                </option>
                                <% } %>
                              </select>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="container mt-4">
                      <div class="row">
                        <div class="col-md-12">
                          <div class="separator-line mt-3"></div>
                        </div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-md-4 mt-5">
                        <div class="px-4 sm:px-0">
                          <h3 class="text-lg font-medium text-white">
                            Confirm Details
                          </h3>
                          <p class="mt-1 text-sm text-gray-400">
                            Once you are ready, click the Create button.
                          </p>
                        </div>
                      </div>
                      <div class="mt-5 col-md-8">
                        <div class="rounded-md">
                          <div class="d-flex justify-content-end w-100">
                            <button
                              type="submit"
                              class="btn btn-outline-primary transition delay-100 group relative d-flex justify-content-center w-25 rounded-md border border-transparent bg-primary text-white"
                            >
                              Create
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </form>
                </div>
                <script>
                  document
                    .getElementById("myForm")
                    .addEventListener("submit", async function (event) {
                      event.preventDefault();

                      let name = encodeURIComponent(
                        document.getElementById("name").value
                      );
                      let egg = encodeURIComponent(
                        document.getElementById("type").value
                      );
                      let ram = encodeURIComponent(
                        document.getElementById("ram").value
                      );
                      let disk = encodeURIComponent(
                        document.getElementById("disk").value
                      );
                      let cpu = encodeURIComponent(
                        document.getElementById("cpu").value
                      );
                      let location = encodeURIComponent(
                        document.getElementById("location").value
                      );

                      const response = await fetch(
                        `/create?name=${name}&egg=${egg}&ram=${ram}&disk=${disk}&cpu=${cpu}&location=${location}`,
                        {
                          method: "GET",
                        }
                      );
                      const Toast = Swal.mixin({
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                          toast.addEventListener("mouseenter", Swal.stopTimer);
                          toast.addEventListener(
                            "mouseleave",
                            Swal.resumeTimer
                          );
                        },
                      });

                      const data = response.url;
                      let urlObj = new URL(data);
                      let path = urlObj.pathname;
                      let query = data.split("?")[1] || "";
                      if (path == "/servers" && query == "") {
                        window.location.href = "/servers";
                      } else {
                        if (
                          path == "/servers/new" &&
                          query == "err=ERRORONCREATE"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "No slots left on selected nodes",
                          });
                        } else if (
                          path == "/servers" &&
                          query == "err=disabled"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Server Creation is disabled",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=COULDNOTDECODENAME"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Special Characters aren't allowed in name.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=COULDNOTDECODENAME"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title:
                              "Special Characters aren't allowed in Server Name.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=TOOMUCHSERVERS"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Maximum servers reached.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=LITTLESERVERNAME"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Too SMALL server name.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=BIGSERVERNAME"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Too LARGE server name.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=INVALIDLOCATION"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "The location is invalid.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=PREMIUMLOCATION"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "The location is premium.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=INVALIDEGG"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "The egg is invalid.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=EXCEEDRAM"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Ram Exceeded.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=EXCEEDRAM"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Ram Exceeded.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=EXCEEDDISK"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Disk Exceeded.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=EXCEEDCPU"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "CPU Exceeded.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=TOOLITTLERAM"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Too little RAM.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=TOOLITTLEDISK"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Too little Disk.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=TOOLITTLECPU"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Too little CPU.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=TOOMUCHRAM"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Too much RAM.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=TOOMUCHDISK"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Too much Disk.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=TOOMUCHCPU"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Too much CPU.",
                          });
                        } else if (
                          path == "/servers/new" &&
                          query == "err=MISSINGVARIABLE"
                        ) {
                          Toast.fire({
                            icon: "error",
                            title: "Are you missing something??",
                          });
                        }
                      }
                    });
                </script>
              </div>
            </div>
          </div>
        </div>
        <%- include('./components/footer') %>
      </div>
      <%- include('./elements/changePassword') %> <%-
      include('./elements/fixedPlugin') %>
    </main>
    <%- include('./components/scripts') %>
  </body>
</html>
